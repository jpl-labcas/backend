<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <artifactId>common</artifactId>
  <packaging>jar</packaging>
  <name>LabCAS backend common components</name>

  <parent>
    <groupId>gov.nasa.jpl.edrn.labcas</groupId>
    <artifactId>labcas-backend</artifactId>
    <version>${labcas-backend.version}</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <dependencies>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.oodt</groupId>
      <artifactId>cas-pge</artifactId>
      <version>${oodt.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>org.apache.solr</groupId>
	    <artifactId>solr-solrj</artifactId>
	    <version>${solr-jars.version}</version>
	    <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${httpcomponents.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpmime</artifactId>
      <version>${httpcomponents.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk15on</artifactId>
      <version>1.67</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>${jsoup.version}</version>
    </dependency>
   	<!-- https://mvnrepository.com/artifact/com.auth0/java-jwt -->
	<dependency>
	    <groupId>com.auth0</groupId>
	    <artifactId>java-jwt</artifactId>
	    <version>3.8.1</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/commons-codec/commons-codec -->
	<dependency>
	    <groupId>commons-codec</groupId>
	    <artifactId>commons-codec</artifactId>
	    <version>1.4</version>
	</dependency>
  </dependencies>

  <build>
    <plugins>

      <!-- Maven assembly configuration -->
      <!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId> <version>2.5.1</version> 
        <configuration> <descriptors> <descriptor>src/main/assembly/assembly.xml</descriptor> </descriptors> </configuration> <executions> 
        <execution> <phase>package</phase> <goals> <goal>single</goal> </goals> </execution> </executions> </plugin> -->
      <!-- Java compiler version -->

      <!-- choose non-standard name for the jar -->
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <finalName>${project.parent.artifactId}-${project.artifactId}-${project.version}</finalName>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
        
          <!-- install jar file into OODT modules -->
          <execution>
            <id>copy-jar-to-workflow</id>
            <phase>install</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${oodt.dir}/cas-workflow/lib</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/target</directory>
                  <includes>
                    <include>${project.parent.artifactId}-${project.artifactId}-${project.version}.jar</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-jar-to-filemgr</id>
            <phase>install</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${oodt.dir}/cas-filemgr/lib</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/target</directory>
                  <includes>
                    <include>${project.parent.artifactId}-${project.artifactId}-${project.version}.jar</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-jar-to-fmprod</id>
            <phase>install</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${install.dir}/apache-tomcat/webapps/fmprod/WEB-INF/lib/</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/target</directory>
                  <includes>
                    <include>${project.parent.artifactId}-${project.artifactId}-${project.version}.jar</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          
          <!--  copy start/stop shell scripts -->
          <execution>
            <id>copy-startup-scripts</id>
            <phase>install</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${install.dir}</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/scripts</directory>
                  <includes>
                    <include>*.sh</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          
          <!--  copy Python scripts -->
          <execution>
            <id>copy-python-scripts</id>
            <phase>install</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${install.dir}/python</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/python</directory>
                  <includes>
                    <include>**</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          
          <!-- copy and filter the manifest file -->
          <execution>
            <id>copy-manifest</id>
            <phase>install</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${install.dir}</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/resources</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>manifest.txt</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>

        </executions>
      </plugin>
      
      <!-- make all scripts executable -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>chmod-scripts</id>
            <phase>install</phase>
            <configuration>
              <target>
                <chmod file="${install.dir}/*.sh" perm="755" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- clean up shell scripts, manifest -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${install.dir}</directory>
              <includes>
                <include>*.sh</include>
                <include>manifest.txt</include>
                <include>**/run</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

    </plugins>
  </build>
</project>
